1. Подготовительный этап

 1.1 Анализ требований
- Определение целей и задач: что именно система будет отслеживать (баллы за определённые действия, достижения, бонусы, штрафы и т.д.).
- Целевая аудитория: кто будет пользоваться системой (пользователи, педагоги, администратор).
- Функциональные требования:
  - Регистрация и авторизация пользователей (авторизация пользователей будет происходить следующим образом: педагогам в их профиль будут приходить заявки на подключение к их кванту. Например: ученик зарегистрировался и выбрал обучение в кванте VR/AR. Алесе Андреевне придёт подтверждение заявки).
  - Личный кабинет пользователя с отображением текущих баллов.
  - История начислений и списания баллов.
  - Механизмы начисления и списания баллов.
  - Административный интерфейс для управления пользователями и системой.
- **Нефункциональные требования**:
  - Безопасность (шифрование паролей, защита от SQL-инъекций).
  - Масштабируемость и производительность.
  - Адаптивность интерфейса.


1.2 Проектирование
- **Разработка структуры данных**:
  - Базы данных для хранения информации о пользователях; начислениях и списаниях баллов.
  - Структуры для хранения логов событий.
  - Проектирование таблиц и их связей.
  
- **Создание прототипа интерфейса**:
  - Разработка макетов для интерфейса пользователя, педагога, администратора в FIGMA.
  - Создание макетов всех страниц: главная страница, личный кабинет, страница количества баллов и их начисления (когда, сколько, за что), история, расписание занятий, все кванты (направления).





2. Этап разработки

2.1 Разработка бэкенда (серверной части)
- **Разработка баз данных**:
  - Создание и функционал баз данных.
    - База данных с полной информацией:
      - ID
      - Фамилия
      - Имя
      - Отчество
      - Дата рождения
      - Направления
      - Общий балл
      ### от 1 до 70
      За перый квант
      - Дата (Определяется сама)
      - Количество баллов
      - Описание (за что?)
      ### от 71 до 140
      За второй квант 
      - Дата (Определяется сама)
      - Количество балло
      - Описание (за что?)
      ### от 141 до 175
      За дополнительный квант
      - Дата (Определяется сама)
      - Количество баллов
      - Описание (за что?)
      ### от 176 до 200
      За дополнительный квант
      - Дата (Определяется сама)
      - Количество баллов
      - Описание (за что?)

      - Дата списания баллов
      - Количество списания баллов
      - Описание списания баллов


    - База данных авторизации:
      - ID
      - Фамилия
      - Имя
      - Отчество
      - Логин
      - Пароль
      - Электронная почта
      - Дата рождения
      - Дата регистрации (определяется сама)
      - Уровень доступа



2.2 Разработка фронтенда (клиентской части)
- **Разработка макета сайта**:
  - Страница регистрации
    - Регистрация:
      - Электронная почта
      - Логин
      - Фамилия Имя Отчество
      - Пароль
      - Повторение пароля
      - Дата рождения

    - Страница входа:
      - Электронная почта или логин
      - Пароль


  - Главная страница
    - Навигационное меню:
      - Главная
      - Баллы
      - Расписание
      - направления
      - Магазин
      - Настройки


  - Страница баллов

  - Страница расписания

  - Страница направлений

  - Страница магазина

  - Страница настроек

  
- **Интеграция с бэкендом**:
  - Подключение к API для отображения и управления данными пользователей.
  - Реализация пользовательских форм (регистрация, вход, редактирование данных).

2.4 Разработка административной панели
- Интерфейс для администраторов для:
  - Управления пользователями (создание, редактирование, удаление).
  - Управления баллами (ручное начисление/списание).
  - Просмотра статистики по пользователям (баллы, действия).





3. Этап тестирования

3.1 Модульное тестирование
- Тестирование отдельных функций, таких как регистрация, начисление и списание баллов, авторизация.

3.2 Интеграционное тестирование
- Проверка взаимодействия различных частей системы (бэкенда и фронтенда, базы данных и серверной логики).

3.3 Тестирование безопасности
- Проверка на уязвимости:
  - Защита от SQL-инъекций.
  - Шифрование паролей.
  - Защита от CSRF и XSS атак.

3.4 Юзабилити-тестирование
- Оценка удобства интерфейса для конечных пользователей.
- Проводится с фокус-группой или отдельными пользователями для получения отзывов и улучшения интерфейса.





4. Этап запуска

4.1 Размещение сайта на сервере
- Настройка хостинга или облачного решения (например, AWS, Google Cloud, DigitalOcean).
- Развертывание базы данных и бэкенда.
- Размещение фронтенда (например, с использованием CDN).

4.2 Настройка домена и SSL-сертификата
- Настройка домена (например, через Cloudflare или другой провайдер).
- Установка SSL-сертификата для обеспечения безопасности.

4.3 Запуск сайта в продакшн
- Миграция базы данных на сервер.
- Тестирование всех функций на продакшн-сервере.





5. Этап пост-запуска

5.1 Мониторинг и аналитика
- Настройка инструментов мониторинга (например, Google Analytics, Sentry).
- Анализ посещаемости и поведения пользователей.
  
5.2 Обратная связь и улучшения
- Сбор отзывов от пользователей.
- Регулярные обновления и улучшения функционала.

5.3 Обслуживание и поддержка
- Регулярное обновление безопасности.
- Поддержка пользователей (например, через службу поддержки).





6. Мерч
- концелярия:
  - Ручка
  -
маркер, ручка, карандаш, блокнот, тетрадь, именной планшет (для бумаги), кружка, толстовка, футболка, рюкзак, маска, носки, магнитик
- Одежда:
  - Футболка
  - Толстовка
  - Рюкзак
  - Маска
  - Носки





Дополнительные задачи

- Разработка мобильного приложения (если это необходимо).
- Интеграция с внешними сервисами (например, для начисления баллов за действия, через API партнёров).
- Оптимизация SEO (если сайт должен быть видимым в поисковых системах).

Этот список задач и действий можно адаптировать в зависимости от сложности системы и её требований.
